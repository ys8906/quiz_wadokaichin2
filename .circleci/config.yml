version: 2.1

executors:  
  default:
    working_directory: ~/Quiz    
    docker:
    - image: circleci/ruby:2.6.5-node-browsers
      environment:
        - BUNDLER_VERSION: 2.1.4
        - RAILS_ENV: 'test'
    - image: circleci/mysql:5.7
      environment:
        - MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
        - MYSQL_ROOT_HOST: '127.0.0.1'

commands:
  setup: 
    steps:
    - checkout
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "Gemfile.lock" }}
        - v1-dependencies-
    - run:
        name: install dependencies
        command: |
          gem install bundler -v 2.1.4
          bundle install --jobs=4 --retry=3 --path vendor/bundle
    - save_cache:
        paths:
        - ./vendor/bundle
        key: v1-dependencies-{{ checksum "Gemfile.lock" }}      
   
jobs:        
  test:
    executor:
      name: default
    steps:
    - setup
    - run: mv ./config/database.yml.ci ./config/database.yml
    - run:
        name: Data base setup
        command: |
           bundle exec rake db:create
           bundle exec rake db:migrate
    - run:
        name: Run rspec
        command: |
           bundle exec rspec --profile 10 \
           --out test_results/rspec.xml \
           --format progress \
           $(circleci tests glob "spec/**/*_spec.rb")
    # # Rubocop
    # - run:
    #     name: Rubocop
    #     command: bundle exec rubocop
    - store_test_results:
        path: /tmp/test-results
    - store_artifacts:
        path: /tmp/test-results
        destination: test-results

  deploy:
    executor:
      name: default
    steps:
    - setup
    - add_ssh_keys:
        fingerprints:
          - "af:b3:f6:29:db:2c:27:f5:73:1e:d7:b4:b6:5e:8b:29"
    - aws-cli/setup
    - aws-white-list-circleci-ip/add
    # - run:
    #     name: Set circleci ip on docker
    #     command: |
    #        MYIP=`curl -s ifconfig.me`
    # - run:
    #     name: Add inbound rule
    #     command: |
    #        aws ec2 authorize-security-group-ingress \
    #        --group-id $AWS_SECURITY_ID \
    #        --protocol tcp --port 22 --cidr $MYIP/32
    - run:
        name: Capistrano deploy
        command: bundle exec cap production deploy
    - aws-white-list-circleci-ip/remove
    # - run:
    #     name: Remove inbound rule
    #     command: |
    #        aws ec2 revoke-security-group-ingress \
    #        --group-id $AWS_SECURITY_ID \
    #        --protocol tcp --port 22 --cidr $MYIP/32
          
orbs:
  aws-cli: circleci/aws-cli@1.0.0
  aws-white-list-circleci-ip: configure/aws-white-list-circleci-ip@1.0.1

workflows:
  version: 2
  test_and_deploy:
     jobs:
      - test
      - deploy:
          requires:
           - test
          filters:
            branches:
              only:
                - master
